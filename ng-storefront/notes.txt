Front end
---------------------------







Backend
----------------------------
dashboard:
    stats:
        This month earning,
        best selling product,
        less qty products,

    Product:
        product list,
        add product,
        Add product categories

    Settings:
        Store name,
        theme selection,

    User Manegement:
        user list,
        add user (assign user role)



User Role
----------------------------






================================
Mongo detail:
Db: ngstorefront
Database username: deep_mongo
Database pass: deep_mongo2019


Package use:
--------------------
mongoose


kishore sug:
environment uses

constat file

====
import { Injectable } from '@angular/core'
import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';
import { Observable, of } from 'rxjs';
import { tap } from 'rxjs/operators';
import { MatSnackBar } from '@angular/material';

@Injectable()
export class ResponseInterceptor implements HttpInterceptor {

	constructor(public snackBar: MatSnackBar) {}

	intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
		// console.log("Before sending data")
		return next.handle(req)
			.pipe(
				tap(event => {
					if (event instanceof HttpResponse) {
						// console.log(" all looks good");
						// console.log(event);
						if(event.body["status_code"] != 200 && event.body["status_code"] != 201) {
							this.snackBar.open(event.body["message"], '', {
								duration: 6000,
								panelClass: ['styled_snackbar', 'error_snackbar']
							});
						}
					}
				}, error => {
					// console.log("----response----");
					// console.error("status code:");
					// console.error(error.status);
					// console.error(error.message);
					// console.log("--- end of response---");
					this.snackBar.open('Error in Server. Please try again after sometime.', '', {
						duration: 6000,
						panelClass: ['styled_snackbar', 'error_snackbar']
					});
				})
			)
	}

}
